##########
## Apps ##
##########

# Web-Browser [Jump]
alt + w
  jump 'Vivaldi-stable' 'vivaldi-stable'

# Web-Browser
alt + shift + w
  vivaldi-stable

# Gui File Manager
alt + f
  jump 'Nemo' 'nemo'

# Pdf Reader with preview
alt + b
  jump 'zathura' 'kitty -1 --class=float ./.scripts/ranger/ranger.py /home/fh1m/Study/'

# Book menu
super + b
  jump 'zathura' 'bash /home/fh1m/.scripts/Books'

# watch stuff with ranger
super + w
  jump 'mpv' 'kitty -1 --class=watch ./.scripts/ranger/ranger.py /home/fh1m/See/'

# VSCODE
super + v
  jump 'Code' 'code'

# File Manager
super + f
  kitty -1 --class=float ./.scripts/ranger/ranger.py

# Terminal with Tmux
super + Return
	jump 'tmux' 'kitty --class=tmux -1 /home/fh1m/.scripts/Main'

# Normal Terminal
alt + Return
   jump 'kitty' 'kitty'

# Terminal
alt + shift + Return
  kitty

# Call Discord
super + d
  jump 'discord' 'discord'

# Call Inkscape
super + i
  jump 'Inkscape' 'inkscape'

# Spotify
super + alt + m
  jump 'Spotify' 'spotify'

# Music Player 1
control + m
  ~/.config/polybar/scripts/player

# Music Player 2
alt + control + m
  ~/.scripts/ncmpcpp-player

# Notion
super + n
  jump 'notion-app-enhanced' 'notion-app-enhanced'

# Blender
alt + control + b
  jump 'Blender' 'blender'

###########
## Lists ##
###########

# What Are Playing
alt + p
   ~/.scripts/players

# Clipboard History
alt + c
  ~/.scripts/clipmenu

# Mpd Menu
alt + m
  rofi-mpc

# Spotify Menu
alt + shift + m
  rofi -modi spotify:"python -m rofify" -show spotify -theme ~/.config/rofi/spotify.rasi -no-fixed-num-lines -xoffset -560 -yoffset -488 2> /dev/null

# Program Launcher Quick
shift + space
	 rofi -theme ~/.config/rofi/launch_apps.rasi -no-fixed-num-lines -no-lazy-grab -show drun

# Kill Menu
super + k
  ~/.scripts/Kill

# Kill All General
alt + k
 ~/.scripts/killall

# Twitch
alt + control + s
 notify-send "Let's Go!!!" "Sensei, We will be watching some twitch" -i ~/Pictures/.icons/twitch.png && ~/.scripts/rofi-ttv followed

# Unhide Menu
alt + control + h
  ~/.scripts/bspc-unhide-menu

# Tasks
control + Return
  ~/.scripts/tasks

# Power Menu
super + p
 ~/.scripts/powermenu

# Take screenshot
Print
  ~/.scripts/rofi-screenshot

# VSCODE projetcs
super + alt + c
  rofi-code -r "rofi -dmenu -p ' Projects ' -i -width '300' -xoffset '-795' -yoffset '-491'  -no-fixed-num-lines"

# Books Menu
super + b
  ~/.scripts/Books

# Open Files with Rofi
super + o
  rofi -show file-browser-extended -file-browser-dir ~ -lines 20 -xoffset -694 -yoffset -490 -width 500 -no-fixed-num-lines -show-icons

# Youtube Suggest stuff
alt + y
  ~/.scripts/Search/youtube-suggest

# Google Suggest Stuff
alt + g
  ~/.scripts/Search/google-suggest

# Edit Confs Quickly
super + c
  ~/.scripts/econfig

# List Sinks
super + shift + s
  ~/.scripts/list_sinks

# Sites I Like
alt + l
  ~/.scripts/quicklinks
##############
## One Task ##
##############

# Reload Sxhkd
control + Escape
	pkill -USR1 -x sxhkd && notify-send "System Status" "Sensei, We are restarting <i><b>Sxhkd</b></i>" -i ~/Pictures/.icons/ai.png

# Restart Bspwm
super + r
	bspc wm -r && notify-send "System Status" "Sensei, We are restarting <i><b>Bspwm</b></i>" -i ~/Pictures/.icons/ai.png

# Make Current Window full
super + m
  bspc desktop -l next

# Close Windows
alt + F1
	bspc node -c

# kill using mouse (aka) xkill
shift + F1
	xkill

# Move Current Window To Extra Workspace
control + alt + e
  bspc node -d Ext

# Lockscreen
super + l
  sudo betterlockscreen -l

# Set the window state to tiled
super + t
	bspc node -t tiled

# Focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
	bspc node -{f,s} {west,south,north,east}

# Cycle Nodes
super + {_, shift + }Escape
  bspc node -f {next, prev}.local.!hidden.window

# Move current window to a pre-selected space
super + shift + m
    bspc node -n last.!automatic

# Rotate tree
super + shift + {d,a}
    bspc node @/ -C {forward,backward}

# Move Floating window
super + control + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

# Switch to Next Desktop
super + Tab
  bspc desktop -f 'next.occupied'

# Go to previous Desktop
super + shift + Tab
  bspc desktop -f 'prev.occupied'

# Send Window to the given desktop without focus
super + {_,shift + }{1-9,0}
  bspc {desktop -f,node -d} '^{1-9,10}'

# Move focused window to the next or previous workspace and then switch to that workspace
super + alt + {Left,Right}
    id=$(bspc query --nodes --node); bspc node --to-desktop {prev,next}; bspc desktop --focus next; bspc node --focus ${id}

# Change Orientation
super + shift + o
	bspc node '@parent.vertical' -R  90 \
	    || bspc node '@parent' -R -90

# Hide curent focused window in Order
super + h
  ~/.scripts/bspc-ordered-hide hide

# Un-Hide curent focused window
super + shift + h
  ~/.scripts/bspc-ordered-hide unhide --focus

# Hide-Unhide window
alt + h
  ~/.scripts/hide

# Go to next empty workspace
super + e
  bspc desktop -f 'next.!occupied'

# Goto Previous empty workspace
super + q
  bspc desktop -f 'prev.!occupied'

# Goto Next Desktop
alt + Tab
   bspc desktop -f 'next.local'

# Goto Next Desktop
alt + shift + Tab
   bspc desktop -f 'prev.local'

# Last Desktop
alt + Escape
   bspc desktop -f last.occupied

# Last Node
alt + grave
  bspc node -f last

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# Stop Screen Recording
shift + Print
  ~/.scripts/rofi-screenshot -s

# Search last copyed text on google
alt + s
  ~/.scripts/clip

# Snip to Clipboard
super + alt + s
  ~/.scripts/snip

# Promte The current window
alt + space
  ~/.scripts/window-master

# Color [ HEX ]
super + shift + c
  farge --notify

# Look words [dictionary]
alt + i
  notify-send "$(~/.scripts/dict $(xclip -selection clipboard -out) | sed 's/\x1b\[[0-9;]*m//g' )" -i "lol" -t 1000000

# Look words [urban Dictionary]
alt + u
  notify-send "$(ud $(xclip -selection clipboard -out) | sed 's/\x1b\[[0-9;]*m//g' )" -i "lol" -t 1000000

# Turn down volumn
XF86AudioLowerVolume
  ponymix decrease 5 --max-volume 200 && dunstify -i ~/Pictures/.icons/audio.png -a System -t 10000 -h string:x-dunst-stack-tag:volume -h int:value:$( ponymix get-volume) " System Volume: $(ponymix get-volume)% " && canberra-gtk-play -i audio-volume-change

# Turn up volum
XF86AudioRaiseVolume
  ponymix increase 5  --max-volume 200 && dunstify -i ~/Pictures/.icons/audio.png -a System -t 10000 -h string:x-dunst-stack-tag:volume -h int:value:$(ponymix get-volume) " System Volume: $(ponymix get-volume)% " && canberra-gtk-play -i audio-volume-change

# Turn up brightness
XF86MonBrightnessUp
  xbacklight -inc 5 && dunstify -i ~/Pictures/.icons/brightness.png -a System -t 10000 -h string:x-dunst-stack-tag:volume -h int:value:$(xbacklight -get) " System Brightness: $(xbacklight -get | awk '\{print int($1+0.5)\}')% " && canberra-gtk-play -i audio-volume-change

# Turn down brightness
XF86MonBrightnessDown
  xbacklight -dec 5 && dunstify -i ~/Pictures/.icons/brightness.png -a System -t 10000 -h string:x-dunst-stack-tag:volume -h int:value:$(xbacklight -get) " System Brightness: $(xbacklight -get | awk '\{print int($1+0.5)\}')% " && canberra-gtk-play -i audio-volume-change

# Mute Mic
XF86AudioMicMute
  amixer set Capture toggle && amixer get Capture | grep '\[off\]' && dunstify -r 1337 "MIC switched OFF" -i ~/Pictures/.icons/microphone.png || dunstify -r 1337 "MIC switched ON" -i ~/Pictures/.icons/microphone.png

# Mute Sound
XF86AudioMute
  pulseaudio-control togmute;dunstify -r 1337 "System Status" "Sensei, Sound is being managed" -i ~/Pictures/.icons/audio.png

# toggle bar
super + x
  ~/.scripts/focus_mode

############
## States ##
############

# Toggle floating
super + space
    if [ -z "$(bspc query -N -n focused.floating)" ]; then \
        bspc node focused -t floating; \
    else \
        bspc node focused -t tiled; \
    fi

# Toggle Fullscreen
super + shift + f
    if [ -z "$(bspc query -N -n focused.fullscreen)" ]; then \
        bspc node focused -t fullscreen; \
    else \
        bspc node focused -t tiled; \
    fi

# Toggle sudo floating
super + s
    if [ -z "$(bspc query -N -n focused.pseudo_tiled)" ]; then \
        bspc node focused -t pseudo_tiled; \
    else \
        bspc node focused -t tiled; \
    fi

###################
## Control Sound ##
###################

# Play (wireless)
XF86AudioPlay
  playerctl --player=playerctld play

# Mpd Pause (wireless)
XF86AudioPause
  playerctl --player=playerctld pause

# Mpd Previous Song (Wireless)
XF86AudioNext
  playerctl --player=playerctld previous

# Mpd Next Song (Wireless)
XF86AudioPrev
  playerctl --player=playerctld next

# Mpd Pause Music (Keyboard)
control + space
  mpc toggle

# Mpd Next song (Keyboard)
control + Left
  mpc prev

# Mpd Previous song (Keyboard)
control + Right
  mpc next

# Pause Media (mpris)
Menu
  playerctl --player=playerctld play-pause

# Next Track (mpris)
ctrl + period
  playerctl --player=playerctld next

# Previous Track (mpris)
ctrl + comma
  playerctl --player=playerctld previous

# MPV
alt + 1
  playerctl --player=mpv play-pause

# Browser
alt + 2
  playerctl --player=chromium play-pause

# Spotify
alt + 3
  playerctl --player=spotify play-pause

# NPD
alt + 4
  playerctl --player=mpd play-pause

# Increase Volumn by 5 (mpd)
control + Up
  mpc volume +5 && dunstify -r 1337 -i "$(playerctl --player=mpd metadata mpris:artUrl)" -a System -t 10000 -h string:x-dunst-stack-tag:volume -h int:value:$(mpc volume | tr -dc '0-9' | awk '\{print $1;\}') "Music Volume: $(mpc volume | tr -dc '0-9')%" && canberra-gtk-play -i audio-volume-change

# Decrease Volumn by 5 (mpd)
control + Down
  mpc volume -5 && dunstify -r 1337 -i "$(playerctl --player=mpd metadata mpris:artUrl)" -a System -t 10000 -h string:x-dunst-stack-tag:volume -h int:value:$(mpc volume | tr -dc '0-9' | awk '\{print $1;\}') "Music Volume: $(mpc volume | tr -dc '0-9')%" && canberra-gtk-play -i audio-volume-change

# Skip 5 second ahead (mpd)
control + shift + Right
  mpc seek +5 && dunstify -r 1337 -i "$(playerctl --player=mpd metadata mpris:artUrl)" -a System -t 10000 -h string:x-dunst-stack-tag:volume -h int:value:$(mpc | awk 'FNR==2 \{print $4\}' | tr -d '()') "$(mpc --format=%title% current)" "$(mpc | awk 'FNR==2 \{print $3\}' | cut -c 1-4) / $(mpc | awk 'FNR==2 \{print $3\}' | cut -c 6-)\n$(mpc | awk 'FNR==2 \{print $1\}')"

# Skip 5 second previous (mpd)
control + shift + Left
  mpc seek -5 && dunstify -r 1337 -i "$(playerctl --player=mpd metadata mpris:artUrl)" -a System -t 10000 -h string:x-dunst-stack-tag:volume -h int:value:$(mpc | awk 'FNR==2 \{print $4\}' | tr -d '()') "$(mpc --format=%title% current)" "$(mpc | awk 'FNR==2 \{print $3\}' | cut -c 1-4) / $(mpc | awk 'FNR==2 \{print $3\}' | cut -c 6-)\n$(mpc | awk 'FNR==2 \{print $1\}')"
