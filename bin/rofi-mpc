#!/usr/bin/env python
from subprocess import Popen, PIPE, STDOUT, check_output, check_call, run
from pathlib import Path
from os import listdir
from os.path import isfile, join
import sys


def getCurrent():
    return check_output(["mpc", "current" , "--format= %title% by %artist%"])
current = getCurrent().decode(encoding='UTF-8')
if not current:
    current = " No Chill"
else:
    current = "" + current.rstrip()
commands = b"    Songs\n    Artists\n   Playlists\n    Shuffle\n"
rofi = Popen(["rofi", "-theme", "/home/fh1m/.config/rofi/mpd.rasi", "-width", "27",
             "-yoffset", "-448", "-mesg", current, "-i", "-dmenu", "-xoffset","-685"], stdout=PIPE, stdin=PIPE)
tmp = rofi.communicate(input=commands)[0].decode().rstrip()
if tmp == "Play/Pause":
    check_call(["mpc", "toggle"])
if tmp == "Next":
    check_call(["mpc", "next"])
if tmp == "Prev":
    check_call(["mpc", "prev"])
if tmp == "    Shuffle":
    check_call(["mpc", "shuffle"])
if tmp == "Loop":
    check_call(["mpc", "repeat" , "&&" , "mpc"  , "single"])
if tmp == "   Playlists":
    check_call(["/home/fh1m/.scripts/mpd_playlists"])
if tmp == "    Artists":
    check_call(["/home/fh1m/.scripts/mpd_albums"])
if tmp == "Volume 50%":
    check_call(["mpc", "volume", "50"])
if tmp == "Volume 75%":
    check_call(["mpc", "volume", "75"])
if tmp == "Volume 100%":
    check_call(["mpc", "volume", "100"])
if tmp == "    Songs":
    titles = check_output(["mpc", "playlist", "-f" , "%title% - %artist%"])
    track = 0
    tlist = ""
    for line in titles.splitlines():
        track += 1
        tlist = tlist + "[" + str(track) + "] " + line.decode() + "\n"
    if track > 1:
        tlist.rstrip()
        tlist = "[Playlists]\n" + tlist
        rofi = Popen(["rofi", "-width", "30", "-lines", "30", "-yoffset", "-490", "-xoffset", "-656", "1", "-i", "-dmenu", "-p", " Songs ", "-no-fixed-num-lines"], stdout=PIPE, stdin=PIPE)
        tmp = rofi.communicate(input=tlist.encode())[0].decode().rstrip()
        tmp = tmp[tmp.find("[")+1:tmp.find("]")]
    else:
        tmp = "Playlists"
    if not tmp:
        sys.exit(0)
    if tmp == "Playlists":
        commands = ""
        playlists = check_output(["mpc", "lsplaylists"])
        for line in playlists.splitlines():
            commands = commands + line.decode() + "\n"
        rofi = Popen(["rofi", "-width", "20","-yoffset","-491" , "-xoffset","-753","-lines","30", current, "-i", "-dmenu", "-p", " Playlists " , "-no-fixed-num-lines"], stdout=PIPE, stdin=PIPE)
        tmp = rofi.communicate(input=commands.encode())[0].decode().rstrip()
        if not tmp:
            sys.exit(0)
        elif tmp == "Local ~/Music":
            check_call(["mpc", "clear"])
            check_call(["mpc", "update"])
            files = check_output(["mpc", "listall"])
            add = Popen(["mpc", "add"], stdin=PIPE)
            add.communicate(files)
            Popen(["mpc", "play"])
        else:
            check_call(["mpc", "clear"])
            check_call(["mpc", "load", tmp])
            check_call(["mpc", "play"])
    else:
        check_call(["mpc", "play", tmp])
